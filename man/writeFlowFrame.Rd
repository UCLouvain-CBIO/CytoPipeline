% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CytoProcessingStepImplementations.R
\name{writeFlowFrame}
\alias{writeFlowFrame}
\title{write flowFrame to disk}
\usage{
writeFlowFrame(
  ff,
  dir,
  useFCSIdentifier = TRUE,
  prefix = "",
  suffix = "",
  format = c("fcs", "csv"),
  ...
)
}
\arguments{
\item{ff}{a flowCore::flowFrame}

\item{dir}{an existing directory to store the flowFrame,}

\item{useFCSIdentifier}{if TRUE filename used will be based on flowFrame
identifier (using flowCOre::identifier(ff))}

\item{prefix}{file name prefix}

\item{suffix}{file name suffix}

\item{format}{either fcs or csv}

\item{...}{other arguments (not used)}
}
\value{
nothing
}
\description{
wrapper around flowCore::write.FCS() or utils::write.csv
that discards any additional parameter passed in (...)
}
\examples{

transListPath <- paste0(system.file("extdata", 
                                    package = "CytoPipeline"),
                        "/OMIP021_TransList.rds") 

transList <- readRDSObject(transListPath)

ff_c <- compensateFromMatrix(OMIP021Samples[[1]],
                             matrixSource = "fcs")  

ff_t <- applyScaleTransforms(ff_c, transList = transList)


rawDataDir <-
    paste0(system.file("extdata", package = "CytoPipeline"), "/")
sampleFiles <-
    paste0(rawDataDir, list.files(rawDataDir, pattern = "sample_"))

truncateMaxRange <- FALSE
minLimit <- NULL

# create flowCore::flowSet with all samples of a dataset
res <- readSampleFiles(
    sampleFiles = sampleFiles,
    whichSamples = "all",
    truncate_max_range = truncateMaxRange,
    min.limit = minLimit)
    
ff_c <- compensateFromMatrix(res[[2]], matrixSource = "fcs") 
outputDir <- withr::local_tempdir()
writeFlowFrame(ff_c, 
               dir = outputDir,
               suffix = "_fcs_export",
               format = "csv")

}
